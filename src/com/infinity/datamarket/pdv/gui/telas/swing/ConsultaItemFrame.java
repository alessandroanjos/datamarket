package com.infinity.datamarket.pdv.gui.telas.swing;

import java.math.BigDecimal;
import java.util.Collection;
import java.util.Iterator;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

import com.infinity.datamarket.comum.Fachada;
import com.infinity.datamarket.comum.produto.Produto;
import com.infinity.datamarket.comum.repositorymanager.PropertyFilter;
import com.infinity.datamarket.comum.util.AppException;
import com.infinity.datamarket.comum.util.StringUtil;

/**
 *
 * @author  wagner.medeiros
 */
public class ConsultaItemFrame extends javax.swing.JDialog{

    public ConsultaItemFrame(JFrame owner) {
        super(owner, "Consulta Produtos",true);
        setSize(700, 500);
        initComponents();
    }

    public void play() {
    	this.setVisible(true);
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">
    private void initComponents() {
    	pnTable = new JPanel();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        dtm = new InternalDefaultTableModel(new String[][]{},new String[]{"Descrição","Preço Padrão", "Desconto","Preço Promocional"});

        getContentPane().setLayout(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getContentPane().setBackground(new java.awt.Color(232, 232, 0));
        pnTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 150), 5));
        jTable1.setFont(new java.awt.Font("MS Sans Serif", 0, 28));
        jTable1.setRowHeight(50);
        jTable1.setModel(dtm);

        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        getContentPane().add(pnTable);

        scrollTable = new javax.swing.JScrollPane();

        scrollTable.setViewportView(jTable1);
        pnTable.setLayout(new java.awt.GridLayout(1, 0));
        pnTable.setBounds(10, 100, 770, 385);
        pnTable.add(scrollTable);


        jTable1.getColumnModel().getColumn(0).setPreferredWidth(400);
        jTable1.getColumnModel().getColumn(0).setResizable(false);

        jTable1.getColumnModel().getColumn(1).setPreferredWidth(120);
        jTable1.getColumnModel().getColumn(1).setResizable(false);

        jTable1.getColumnModel().getColumn(2).setPreferredWidth(102);
        jTable1.getColumnModel().getColumn(2).setResizable(false);

        jTable1.getColumnModel().getColumn(3).setPreferredWidth(120);
        jTable1.getColumnModel().getColumn(3).setResizable(false);

        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);



        jLabel1.setFont(new java.awt.Font("MS Sans Serif", 0, 16));
        jLabel1.setText("Descri\u00e7\u00e3o (min. 3 caracteres)");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 250, 20);

        jTextField1.setFont(new java.awt.Font("MS Sans Serif", 0, 28));
        jTextField1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 150), 5));
        getContentPane().add(jTextField1);
        jTextField1.setBounds(10, 40, 770, 50);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
        	 public void keyReleased(java.awt.event.KeyEvent evt) {
        		 if (evt.getKeyCode() == evt.VK_ENTER){
        			 try{
	        			 jTable1.setRowSelectionInterval(0, 0);
	        			 jTable1.requestFocus();
        			 }catch(java.lang.IllegalArgumentException e){

        			 }
                 }else if (evt.getKeyCode() == evt.VK_ESCAPE){
                 	retornoTela = BUTTON_CANCEL;
                 	valor = null;
                    fechar();
                 }else{
                	 jTextField1KeyReleased(evt);
                 }
             }
        });

        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
        	public void keyReleased(java.awt.event.KeyEvent evt) {
                if (evt.getKeyCode() == evt.VK_ENTER){
                	retornoTela = BUTTON_OK;
                	if (jTable1.getSelectedRow() == 0){
                		valor = (Produto) dtm.getValueAt(jTable1.getRowCount()-1, 0);
                	}else{
                		valor = (Produto) dtm.getValueAt(jTable1.getSelectedRow()-1, 0);
                	}
                    fechar();
                }else if (evt.getKeyCode() == evt.VK_ESCAPE){
                	retornoTela = BUTTON_CANCEL;
                	valor = null;
                    fechar();
                }

            }
       });


        pack();
    }

    private void fechar(){
    	this.dispose();
    }

    private void removeTodos(){
    	int linhas = jTable1.getRowCount();
    	for (int i = 0; i < linhas ;i++){
    		try{
    			dtm.removeRow(0);
    		}catch(ArrayIndexOutOfBoundsException e){

    		}
    	}
    }

    private void adicionar(Collection c){
    	Iterator i = c.iterator();
    	for (int n = 0 ;i.hasNext(); n++){
    		Produto prod = (Produto) i.next();

    		BigDecimal desc = null;
    		BigDecimal preco = null;
    		if (prod.getPrecoPromocional() != null){
				desc = prod.getPrecoPadrao().subtract(prod.getPrecoPromocional());
				preco = prod.getPrecoPromocional();
			}else{
				desc = new BigDecimal(0);
				preco = prod.getPrecoPadrao();
			}

    		String precoPadrao = StringUtil.numeroToString(prod.getPrecoPadrao(), 2, 0, ",", ".", true);
    		String precoPromocional = StringUtil.numeroToString(preco, 2, 0, ",", ".", true);
    		String desconto = StringUtil.numeroToString(desc, 2, 0, ",", ".", true);

    		dtm.insertRow(n,new Object[]{prod,precoPadrao,desconto,precoPromocional});
    	}
    }



    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {
    	try{
    		if (!"".equalsIgnoreCase(jTextField1.getText()) && jTextField1.getText().length() > 2){
    			PropertyFilter filter = new PropertyFilter();
    			filter.addProperty("descricaoCompleta", jTextField1.getText());
    			filter.setIgnoreCase(true);
	    		Collection c = Fachada.getInstancia().consultarProdutoPorFiltro(filter,false);
	    		removeTodos();
	    		adicionar(c);
    		}else{
    			removeTodos();
    		}
    	}catch(AppException e){
    		e.printStackTrace();
    	}
    }

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {

    }

    public static void main(String args[]) {
    	JFrame f = new JFrame();
    	f.setSize(800, 600);
    	f.setVisible(true);
    	ConsultaItemFrame c = new ConsultaItemFrame(f);
    	c.setSize(800, 500);
    	c.play();
    	if (c.getRetornoTela() == c.BUTTON_OK){
    		System.out.println(c.getValor());
    	}
    }

    private int retornoTela = BUTTON_OK;
    private Produto valor = null;

    public int getRetornoTela() {
        return retornoTela;
    }


    public Produto getValor() {
        return valor;
    }

    public static final int BUTTON_OK	= 0;
	public static final int BUTTON_CANCEL	= 1;


    private javax.swing.JLabel jLabel1;
    private javax.swing.JTable jTable1;
    private javax.swing.table.DefaultTableModel dtm;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JScrollPane scrollTable;
    private javax.swing.JPanel pnTable;

    class InternalDefaultTableModel extends DefaultTableModel {
    	public InternalDefaultTableModel(Object[][] data, Object[] title){
    		super(data,title);
    	}
    	public boolean isCellEditable(int row, int col) {
    		return false;
        }
    }

}
